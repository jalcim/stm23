ARM GAS  /tmp/cctB2UjR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB135:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include "math.h"
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
ARM GAS  /tmp/cctB2UjR.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.c    **** DAC_HandleTypeDef hdac;
  46:Src/main.c    **** 
  47:Src/main.c    **** TIM_HandleTypeDef htim6;
  48:Src/main.c    **** 
  49:Src/main.c    **** UART_HandleTypeDef huart2;
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END PV */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** void SystemClock_Config(void);
  57:Src/main.c    **** static void MX_GPIO_Init(void);
  58:Src/main.c    **** static void MX_DAC_Init(void);
  59:Src/main.c    **** static void MX_USART2_UART_Init(void);
  60:Src/main.c    **** static void MX_TIM6_Init(void);
  61:Src/main.c    **** /* USER CODE BEGIN PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  66:Src/main.c    **** /* USER CODE BEGIN 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END 0 */
  69:Src/main.c    **** 
  70:Src/main.c    **** /**
  71:Src/main.c    ****   * @brief  The application entry point.
  72:Src/main.c    ****   * @retval int
  73:Src/main.c    ****   */
  74:Src/main.c    **** int main(void)
  75:Src/main.c    **** {
  76:Src/main.c    ****   /* USER CODE BEGIN 1 */
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* USER CODE END 1 */
  79:Src/main.c    ****   
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  84:Src/main.c    ****   HAL_Init();
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE BEGIN Init */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE END Init */
  89:Src/main.c    **** 
ARM GAS  /tmp/cctB2UjR.s 			page 3


  90:Src/main.c    ****   /* Configure the system clock */
  91:Src/main.c    ****   SystemClock_Config();
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE END SysInit */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* Initialize all configured peripherals */
  98:Src/main.c    ****   MX_GPIO_Init();
  99:Src/main.c    ****   MX_DAC_Init();
 100:Src/main.c    ****   MX_USART2_UART_Init();
 101:Src/main.c    ****   MX_TIM6_Init();
 102:Src/main.c    ****   /* USER CODE BEGIN 2 */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* USER CODE END 2 */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* Infinite loop */
 107:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 108:Src/main.c    ****   HAL_DAC_Start(&hdac, DAC_CHANNEL_1);
 109:Src/main.c    ****   HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 110:Src/main.c    ****   HAL_Delay(1);
 111:Src/main.c    ****   float x = 0.0;
 112:Src/main.c    ****   float s;
 113:Src/main.c    ****   //  int cpt;
 114:Src/main.c    ****   while (1)
 115:Src/main.c    ****     {
 116:Src/main.c    ****       (x == 6.283184) ? (x = 0.0) : (x+=3.141592);(x+=0.1);//(x+=0.55);
 117:Src/main.c    ****     //    HAL_DAC_SetValue(&hdac, DAC_CHANNEL_1, DAC_ALIGN_8B_R, (127 * sin(x)) + 127);
 118:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_1, DAC_ALIGN_8B_R, 255);
 119:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, 0);
 120:Src/main.c    ****       HAL_Delay(50);
 121:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_1, DAC_ALIGN_8B_R, 0);
 122:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, 255);
 123:Src/main.c    ****       HAL_Delay(50);
 124:Src/main.c    ****       //      s = sin(x);
 125:Src/main.c    ****       
 126:Src/main.c    ****       //      HAL_DAC_SetValue(&hdac, DAC_CHANNEL_1, DAC_ALIGN_8B_R, 200.00 * s);
 127:Src/main.c    ****       //      HAL_Delay(1);
 128:Src/main.c    ****       //      HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, -200.00 * s);
 129:Src/main.c    ****       //      HAL_Delay(1);
 130:Src/main.c    ****     /* USER CODE END WHILE */
 131:Src/main.c    **** 
 132:Src/main.c    ****     /* USER CODE BEGIN 3 */
 133:Src/main.c    ****     }
 134:Src/main.c    ****   /* USER CODE END 3 */
 135:Src/main.c    **** }
 136:Src/main.c    **** 
 137:Src/main.c    **** /**
 138:Src/main.c    ****   * @brief System Clock Configuration
 139:Src/main.c    ****   * @retval None
 140:Src/main.c    ****   */
 141:Src/main.c    **** void SystemClock_Config(void)
 142:Src/main.c    **** {
 143:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 144:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 145:Src/main.c    **** 
 146:Src/main.c    ****   /** Configure the main internal regulator output voltage 
ARM GAS  /tmp/cctB2UjR.s 			page 4


 147:Src/main.c    ****   */
 148:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 149:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 150:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 151:Src/main.c    ****   */
 152:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 153:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 154:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 180;
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 162:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 163:Src/main.c    ****   {
 164:Src/main.c    ****     Error_Handler();
 165:Src/main.c    ****   }
 166:Src/main.c    ****   /** Activate the Over-Drive mode 
 167:Src/main.c    ****   */
 168:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 169:Src/main.c    ****   {
 170:Src/main.c    ****     Error_Handler();
 171:Src/main.c    ****   }
 172:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 173:Src/main.c    ****   */
 174:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 175:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 176:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 177:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 178:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 179:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 180:Src/main.c    **** 
 181:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 182:Src/main.c    ****   {
 183:Src/main.c    ****     Error_Handler();
 184:Src/main.c    ****   }
 185:Src/main.c    **** }
 186:Src/main.c    **** 
 187:Src/main.c    **** /**
 188:Src/main.c    ****   * @brief DAC Initialization Function
 189:Src/main.c    ****   * @param None
 190:Src/main.c    ****   * @retval None
 191:Src/main.c    ****   */
 192:Src/main.c    **** static void MX_DAC_Init(void)
 193:Src/main.c    **** {
 194:Src/main.c    **** 
 195:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 0 */
 196:Src/main.c    **** 
 197:Src/main.c    ****   /* USER CODE END DAC_Init 0 */
 198:Src/main.c    **** 
 199:Src/main.c    ****   DAC_ChannelConfTypeDef sConfig = {0};
 200:Src/main.c    **** 
 201:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 1 */
 202:Src/main.c    **** 
 203:Src/main.c    ****   /* USER CODE END DAC_Init 1 */
ARM GAS  /tmp/cctB2UjR.s 			page 5


 204:Src/main.c    ****   /** DAC Initialization 
 205:Src/main.c    ****   */
 206:Src/main.c    ****   hdac.Instance = DAC;
 207:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 208:Src/main.c    ****   {
 209:Src/main.c    ****     Error_Handler();
 210:Src/main.c    ****   }
 211:Src/main.c    ****   /** DAC channel OUT1 config 
 212:Src/main.c    ****   */
 213:Src/main.c    ****   sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 214:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 215:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 216:Src/main.c    ****   {
 217:Src/main.c    ****     Error_Handler();
 218:Src/main.c    ****   }
 219:Src/main.c    ****   /** DAC channel OUT2 config 
 220:Src/main.c    ****   */
 221:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 222:Src/main.c    ****   {
 223:Src/main.c    ****     Error_Handler();
 224:Src/main.c    ****   }
 225:Src/main.c    ****   /* USER CODE BEGIN DAC_Init 2 */
 226:Src/main.c    **** 
 227:Src/main.c    ****   /* USER CODE END DAC_Init 2 */
 228:Src/main.c    **** 
 229:Src/main.c    **** }
 230:Src/main.c    **** 
 231:Src/main.c    **** /**
 232:Src/main.c    ****   * @brief TIM6 Initialization Function
 233:Src/main.c    ****   * @param None
 234:Src/main.c    ****   * @retval None
 235:Src/main.c    ****   */
 236:Src/main.c    **** static void MX_TIM6_Init(void)
 237:Src/main.c    **** {
 238:Src/main.c    **** 
 239:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 0 */
 240:Src/main.c    **** 
 241:Src/main.c    ****   /* USER CODE END TIM6_Init 0 */
 242:Src/main.c    **** 
 243:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 244:Src/main.c    **** 
 245:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 1 */
 246:Src/main.c    **** 
 247:Src/main.c    ****   /* USER CODE END TIM6_Init 1 */
 248:Src/main.c    ****   htim6.Instance = TIM6;
 249:Src/main.c    ****   htim6.Init.Prescaler = 0;
 250:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 251:Src/main.c    ****   htim6.Init.Period = 100;
 252:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 253:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 254:Src/main.c    ****   {
 255:Src/main.c    ****     Error_Handler();
 256:Src/main.c    ****   }
 257:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 258:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 259:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 260:Src/main.c    ****   {
ARM GAS  /tmp/cctB2UjR.s 			page 6


 261:Src/main.c    ****     Error_Handler();
 262:Src/main.c    ****   }
 263:Src/main.c    ****   /* USER CODE BEGIN TIM6_Init 2 */
 264:Src/main.c    **** 
 265:Src/main.c    ****   /* USER CODE END TIM6_Init 2 */
 266:Src/main.c    **** 
 267:Src/main.c    **** }
 268:Src/main.c    **** 
 269:Src/main.c    **** /**
 270:Src/main.c    ****   * @brief USART2 Initialization Function
 271:Src/main.c    ****   * @param None
 272:Src/main.c    ****   * @retval None
 273:Src/main.c    ****   */
 274:Src/main.c    **** static void MX_USART2_UART_Init(void)
 275:Src/main.c    **** {
 276:Src/main.c    **** 
 277:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 278:Src/main.c    **** 
 279:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 280:Src/main.c    **** 
 281:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 282:Src/main.c    **** 
 283:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 284:Src/main.c    ****   huart2.Instance = USART2;
 285:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 286:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 287:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 288:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 289:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 290:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 291:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 292:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 293:Src/main.c    ****   {
 294:Src/main.c    ****     Error_Handler();
 295:Src/main.c    ****   }
 296:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 297:Src/main.c    **** 
 298:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 299:Src/main.c    **** 
 300:Src/main.c    **** }
 301:Src/main.c    **** 
 302:Src/main.c    **** /**
 303:Src/main.c    ****   * @brief GPIO Initialization Function
 304:Src/main.c    ****   * @param None
 305:Src/main.c    ****   * @retval None
 306:Src/main.c    ****   */
 307:Src/main.c    **** static void MX_GPIO_Init(void)
 308:Src/main.c    **** {
  27              		.loc 1 308 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 00B5     		push	{lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 8BB0     		sub	sp, sp, #44
ARM GAS  /tmp/cctB2UjR.s 			page 7


  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 48
 309:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 309 0
  39 0004 0022     		movs	r2, #0
  40 0006 0792     		str	r2, [sp, #28]
  41 0008 0892     		str	r2, [sp, #32]
  42 000a 0992     		str	r2, [sp, #36]
  43              	.LBB2:
 310:Src/main.c    **** 
 311:Src/main.c    ****   /* GPIO Ports Clock Enable */
 312:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  44              		.loc 1 312 0
  45 000c 0192     		str	r2, [sp, #4]
  46 000e 1A4B     		ldr	r3, .L3
  47 0010 196B     		ldr	r1, [r3, #48]
  48 0012 41F00401 		orr	r1, r1, #4
  49 0016 1963     		str	r1, [r3, #48]
  50 0018 196B     		ldr	r1, [r3, #48]
  51 001a 01F00401 		and	r1, r1, #4
  52 001e 0191     		str	r1, [sp, #4]
  53 0020 0199     		ldr	r1, [sp, #4]
  54              	.LBE2:
  55              	.LBB3:
 313:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  56              		.loc 1 313 0
  57 0022 0292     		str	r2, [sp, #8]
  58 0024 196B     		ldr	r1, [r3, #48]
  59 0026 41F08001 		orr	r1, r1, #128
  60 002a 1963     		str	r1, [r3, #48]
  61 002c 196B     		ldr	r1, [r3, #48]
  62 002e 01F08001 		and	r1, r1, #128
  63 0032 0291     		str	r1, [sp, #8]
  64 0034 0299     		ldr	r1, [sp, #8]
  65              	.LBE3:
  66              	.LBB4:
 314:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  67              		.loc 1 314 0
  68 0036 0392     		str	r2, [sp, #12]
  69 0038 196B     		ldr	r1, [r3, #48]
  70 003a 41F00101 		orr	r1, r1, #1
  71 003e 1963     		str	r1, [r3, #48]
  72 0040 196B     		ldr	r1, [r3, #48]
  73 0042 01F00101 		and	r1, r1, #1
  74 0046 0391     		str	r1, [sp, #12]
  75 0048 0399     		ldr	r1, [sp, #12]
  76              	.LBE4:
  77              	.LBB5:
 315:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  78              		.loc 1 315 0
  79 004a 0492     		str	r2, [sp, #16]
  80 004c 1A6B     		ldr	r2, [r3, #48]
  81 004e 42F00202 		orr	r2, r2, #2
  82 0052 1A63     		str	r2, [r3, #48]
  83 0054 1B6B     		ldr	r3, [r3, #48]
  84 0056 03F00203 		and	r3, r3, #2
  85 005a 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/cctB2UjR.s 			page 8


  86 005c 049B     		ldr	r3, [sp, #16]
  87              	.LBE5:
 316:Src/main.c    **** 
 317:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 318:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
  88              		.loc 1 318 0
  89 005e 4FF40053 		mov	r3, #8192
  90 0062 0593     		str	r3, [sp, #20]
 319:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
  91              		.loc 1 319 0
  92 0064 054B     		ldr	r3, .L3+4
  93 0066 0693     		str	r3, [sp, #24]
 320:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 321:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
  94              		.loc 1 321 0
  95 0068 05A9     		add	r1, sp, #20
  96 006a 0548     		ldr	r0, .L3+8
  97 006c FFF7FEFF 		bl	HAL_GPIO_Init
  98              	.LVL0:
 322:Src/main.c    **** 
 323:Src/main.c    **** }
  99              		.loc 1 323 0
 100 0070 0BB0     		add	sp, sp, #44
 101              	.LCFI2:
 102              		.cfi_def_cfa_offset 4
 103              		@ sp needed
 104 0072 5DF804FB 		ldr	pc, [sp], #4
 105              	.L4:
 106 0076 00BF     		.align	2
 107              	.L3:
 108 0078 00380240 		.word	1073887232
 109 007c 00002110 		.word	270598144
 110 0080 00080240 		.word	1073874944
 111              		.cfi_endproc
 112              	.LFE135:
 114              		.section	.text.MX_DAC_Init,"ax",%progbits
 115              		.align	1
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu fpv4-sp-d16
 121              	MX_DAC_Init:
 122              	.LFB132:
 193:Src/main.c    **** 
 123              		.loc 1 193 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 8
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127 0000 30B5     		push	{r4, r5, lr}
 128              	.LCFI3:
 129              		.cfi_def_cfa_offset 12
 130              		.cfi_offset 4, -12
 131              		.cfi_offset 5, -8
 132              		.cfi_offset 14, -4
 133 0002 83B0     		sub	sp, sp, #12
 134              	.LCFI4:
 135              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cctB2UjR.s 			page 9


 199:Src/main.c    **** 
 136              		.loc 1 199 0
 137 0004 0024     		movs	r4, #0
 138 0006 0094     		str	r4, [sp]
 139 0008 0194     		str	r4, [sp, #4]
 206:Src/main.c    ****   if (HAL_DAC_Init(&hdac) != HAL_OK)
 140              		.loc 1 206 0
 141 000a 0A4D     		ldr	r5, .L7
 142 000c 0A4B     		ldr	r3, .L7+4
 143 000e 2B60     		str	r3, [r5]
 207:Src/main.c    ****   {
 144              		.loc 1 207 0
 145 0010 2846     		mov	r0, r5
 146 0012 FFF7FEFF 		bl	HAL_DAC_Init
 147              	.LVL1:
 213:Src/main.c    ****   sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 148              		.loc 1 213 0
 149 0016 0094     		str	r4, [sp]
 214:Src/main.c    ****   if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 150              		.loc 1 214 0
 151 0018 0194     		str	r4, [sp, #4]
 215:Src/main.c    ****   {
 152              		.loc 1 215 0
 153 001a 2246     		mov	r2, r4
 154 001c 6946     		mov	r1, sp
 155 001e 2846     		mov	r0, r5
 156 0020 FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 157              	.LVL2:
 221:Src/main.c    ****   {
 158              		.loc 1 221 0
 159 0024 1022     		movs	r2, #16
 160 0026 6946     		mov	r1, sp
 161 0028 2846     		mov	r0, r5
 162 002a FFF7FEFF 		bl	HAL_DAC_ConfigChannel
 163              	.LVL3:
 229:Src/main.c    **** 
 164              		.loc 1 229 0
 165 002e 03B0     		add	sp, sp, #12
 166              	.LCFI5:
 167              		.cfi_def_cfa_offset 12
 168              		@ sp needed
 169 0030 30BD     		pop	{r4, r5, pc}
 170              	.L8:
 171 0032 00BF     		.align	2
 172              	.L7:
 173 0034 00000000 		.word	hdac
 174 0038 00740040 		.word	1073771520
 175              		.cfi_endproc
 176              	.LFE132:
 178              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 179              		.align	1
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu fpv4-sp-d16
 185              	MX_USART2_UART_Init:
 186              	.LFB134:
ARM GAS  /tmp/cctB2UjR.s 			page 10


 275:Src/main.c    **** 
 187              		.loc 1 275 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191 0000 08B5     		push	{r3, lr}
 192              	.LCFI6:
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 3, -8
 195              		.cfi_offset 14, -4
 284:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 196              		.loc 1 284 0
 197 0002 0848     		ldr	r0, .L11
 198 0004 084B     		ldr	r3, .L11+4
 199 0006 0360     		str	r3, [r0]
 285:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 200              		.loc 1 285 0
 201 0008 4FF4E133 		mov	r3, #115200
 202 000c 4360     		str	r3, [r0, #4]
 286:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 203              		.loc 1 286 0
 204 000e 0023     		movs	r3, #0
 205 0010 8360     		str	r3, [r0, #8]
 287:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 206              		.loc 1 287 0
 207 0012 C360     		str	r3, [r0, #12]
 288:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 208              		.loc 1 288 0
 209 0014 0361     		str	r3, [r0, #16]
 289:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 210              		.loc 1 289 0
 211 0016 0C22     		movs	r2, #12
 212 0018 4261     		str	r2, [r0, #20]
 290:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 213              		.loc 1 290 0
 214 001a 8361     		str	r3, [r0, #24]
 291:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 215              		.loc 1 291 0
 216 001c C361     		str	r3, [r0, #28]
 292:Src/main.c    ****   {
 217              		.loc 1 292 0
 218 001e FFF7FEFF 		bl	HAL_UART_Init
 219              	.LVL4:
 300:Src/main.c    **** 
 220              		.loc 1 300 0
 221 0022 08BD     		pop	{r3, pc}
 222              	.L12:
 223              		.align	2
 224              	.L11:
 225 0024 00000000 		.word	huart2
 226 0028 00440040 		.word	1073759232
 227              		.cfi_endproc
 228              	.LFE134:
 230              		.section	.text.MX_TIM6_Init,"ax",%progbits
 231              		.align	1
 232              		.syntax unified
 233              		.thumb
ARM GAS  /tmp/cctB2UjR.s 			page 11


 234              		.thumb_func
 235              		.fpu fpv4-sp-d16
 237              	MX_TIM6_Init:
 238              	.LFB133:
 237:Src/main.c    **** 
 239              		.loc 1 237 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 8
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243 0000 30B5     		push	{r4, r5, lr}
 244              	.LCFI7:
 245              		.cfi_def_cfa_offset 12
 246              		.cfi_offset 4, -12
 247              		.cfi_offset 5, -8
 248              		.cfi_offset 14, -4
 249 0002 83B0     		sub	sp, sp, #12
 250              	.LCFI8:
 251              		.cfi_def_cfa_offset 24
 243:Src/main.c    **** 
 252              		.loc 1 243 0
 253 0004 0025     		movs	r5, #0
 254 0006 0095     		str	r5, [sp]
 255 0008 0195     		str	r5, [sp, #4]
 248:Src/main.c    ****   htim6.Init.Prescaler = 0;
 256              		.loc 1 248 0
 257 000a 094C     		ldr	r4, .L15
 258 000c 094B     		ldr	r3, .L15+4
 259 000e 2360     		str	r3, [r4]
 249:Src/main.c    ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 260              		.loc 1 249 0
 261 0010 6560     		str	r5, [r4, #4]
 250:Src/main.c    ****   htim6.Init.Period = 100;
 262              		.loc 1 250 0
 263 0012 A560     		str	r5, [r4, #8]
 251:Src/main.c    ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 264              		.loc 1 251 0
 265 0014 6423     		movs	r3, #100
 266 0016 E360     		str	r3, [r4, #12]
 252:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 267              		.loc 1 252 0
 268 0018 A561     		str	r5, [r4, #24]
 253:Src/main.c    ****   {
 269              		.loc 1 253 0
 270 001a 2046     		mov	r0, r4
 271 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 272              	.LVL5:
 257:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 273              		.loc 1 257 0
 274 0020 0095     		str	r5, [sp]
 258:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 275              		.loc 1 258 0
 276 0022 0195     		str	r5, [sp, #4]
 259:Src/main.c    ****   {
 277              		.loc 1 259 0
 278 0024 6946     		mov	r1, sp
 279 0026 2046     		mov	r0, r4
 280 0028 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
ARM GAS  /tmp/cctB2UjR.s 			page 12


 281              	.LVL6:
 267:Src/main.c    **** 
 282              		.loc 1 267 0
 283 002c 03B0     		add	sp, sp, #12
 284              	.LCFI9:
 285              		.cfi_def_cfa_offset 12
 286              		@ sp needed
 287 002e 30BD     		pop	{r4, r5, pc}
 288              	.L16:
 289              		.align	2
 290              	.L15:
 291 0030 00000000 		.word	htim6
 292 0034 00100040 		.word	1073745920
 293              		.cfi_endproc
 294              	.LFE133:
 296              		.section	.text.SystemClock_Config,"ax",%progbits
 297              		.align	1
 298              		.global	SystemClock_Config
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 302              		.fpu fpv4-sp-d16
 304              	SystemClock_Config:
 305              	.LFB131:
 142:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 306              		.loc 1 142 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 80
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310 0000 30B5     		push	{r4, r5, lr}
 311              	.LCFI10:
 312              		.cfi_def_cfa_offset 12
 313              		.cfi_offset 4, -12
 314              		.cfi_offset 5, -8
 315              		.cfi_offset 14, -4
 316 0002 95B0     		sub	sp, sp, #84
 317              	.LCFI11:
 318              		.cfi_def_cfa_offset 96
 143:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 319              		.loc 1 143 0
 320 0004 3422     		movs	r2, #52
 321 0006 0021     		movs	r1, #0
 322 0008 07A8     		add	r0, sp, #28
 323 000a FFF7FEFF 		bl	memset
 324              	.LVL7:
 144:Src/main.c    **** 
 325              		.loc 1 144 0
 326 000e 0024     		movs	r4, #0
 327 0010 0294     		str	r4, [sp, #8]
 328 0012 0394     		str	r4, [sp, #12]
 329 0014 0494     		str	r4, [sp, #16]
 330 0016 0594     		str	r4, [sp, #20]
 331 0018 0694     		str	r4, [sp, #24]
 332              	.LBB6:
 148:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 333              		.loc 1 148 0
 334 001a 0094     		str	r4, [sp]
ARM GAS  /tmp/cctB2UjR.s 			page 13


 335 001c 1C4B     		ldr	r3, .L19
 336 001e 1A6C     		ldr	r2, [r3, #64]
 337 0020 42F08052 		orr	r2, r2, #268435456
 338 0024 1A64     		str	r2, [r3, #64]
 339 0026 1B6C     		ldr	r3, [r3, #64]
 340 0028 03F08053 		and	r3, r3, #268435456
 341 002c 0093     		str	r3, [sp]
 342 002e 009B     		ldr	r3, [sp]
 343              	.LBE6:
 344              	.LBB7:
 149:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 345              		.loc 1 149 0
 346 0030 0194     		str	r4, [sp, #4]
 347 0032 184B     		ldr	r3, .L19+4
 348 0034 1A68     		ldr	r2, [r3]
 349 0036 42F44042 		orr	r2, r2, #49152
 350 003a 1A60     		str	r2, [r3]
 351 003c 1B68     		ldr	r3, [r3]
 352 003e 03F44043 		and	r3, r3, #49152
 353 0042 0193     		str	r3, [sp, #4]
 354 0044 019B     		ldr	r3, [sp, #4]
 355              	.LBE7:
 152:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 356              		.loc 1 152 0
 357 0046 0225     		movs	r5, #2
 358 0048 0795     		str	r5, [sp, #28]
 153:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 359              		.loc 1 153 0
 360 004a 0123     		movs	r3, #1
 361 004c 0A93     		str	r3, [sp, #40]
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 362              		.loc 1 154 0
 363 004e 1023     		movs	r3, #16
 364 0050 0B93     		str	r3, [sp, #44]
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 365              		.loc 1 155 0
 366 0052 0D95     		str	r5, [sp, #52]
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 367              		.loc 1 156 0
 368 0054 0E94     		str	r4, [sp, #56]
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 180;
 369              		.loc 1 157 0
 370 0056 0823     		movs	r3, #8
 371 0058 0F93     		str	r3, [sp, #60]
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 372              		.loc 1 158 0
 373 005a B423     		movs	r3, #180
 374 005c 1093     		str	r3, [sp, #64]
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 375              		.loc 1 159 0
 376 005e 1195     		str	r5, [sp, #68]
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 377              		.loc 1 160 0
 378 0060 1295     		str	r5, [sp, #72]
 161:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 379              		.loc 1 161 0
 380 0062 1395     		str	r5, [sp, #76]
ARM GAS  /tmp/cctB2UjR.s 			page 14


 162:Src/main.c    ****   {
 381              		.loc 1 162 0
 382 0064 07A8     		add	r0, sp, #28
 383 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 384              	.LVL8:
 168:Src/main.c    ****   {
 385              		.loc 1 168 0
 386 006a FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 387              	.LVL9:
 174:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 388              		.loc 1 174 0
 389 006e 0F23     		movs	r3, #15
 390 0070 0293     		str	r3, [sp, #8]
 176:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 391              		.loc 1 176 0
 392 0072 0395     		str	r5, [sp, #12]
 177:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 393              		.loc 1 177 0
 394 0074 0494     		str	r4, [sp, #16]
 178:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 395              		.loc 1 178 0
 396 0076 4FF4A053 		mov	r3, #5120
 397 007a 0593     		str	r3, [sp, #20]
 179:Src/main.c    **** 
 398              		.loc 1 179 0
 399 007c 4FF48053 		mov	r3, #4096
 400 0080 0693     		str	r3, [sp, #24]
 181:Src/main.c    ****   {
 401              		.loc 1 181 0
 402 0082 0521     		movs	r1, #5
 403 0084 02A8     		add	r0, sp, #8
 404 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 405              	.LVL10:
 185:Src/main.c    **** 
 406              		.loc 1 185 0
 407 008a 15B0     		add	sp, sp, #84
 408              	.LCFI12:
 409              		.cfi_def_cfa_offset 12
 410              		@ sp needed
 411 008c 30BD     		pop	{r4, r5, pc}
 412              	.L20:
 413 008e 00BF     		.align	2
 414              	.L19:
 415 0090 00380240 		.word	1073887232
 416 0094 00700040 		.word	1073770496
 417              		.cfi_endproc
 418              	.LFE131:
 420              		.global	__aeabi_f2d
 421              		.global	__aeabi_dcmpeq
 422              		.global	__aeabi_dadd
 423              		.global	__aeabi_d2f
 424              		.section	.text.main,"ax",%progbits
 425              		.align	1
 426              		.global	main
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
ARM GAS  /tmp/cctB2UjR.s 			page 15


 430              		.fpu fpv4-sp-d16
 432              	main:
 433              	.LFB130:
  75:Src/main.c    ****   /* USER CODE BEGIN 1 */
 434              		.loc 1 75 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438 0000 38B5     		push	{r3, r4, r5, lr}
 439              	.LCFI13:
 440              		.cfi_def_cfa_offset 16
 441              		.cfi_offset 3, -16
 442              		.cfi_offset 4, -12
 443              		.cfi_offset 5, -8
 444              		.cfi_offset 14, -4
  84:Src/main.c    **** 
 445              		.loc 1 84 0
 446 0002 FFF7FEFF 		bl	HAL_Init
 447              	.LVL11:
  91:Src/main.c    **** 
 448              		.loc 1 91 0
 449 0006 FFF7FEFF 		bl	SystemClock_Config
 450              	.LVL12:
  98:Src/main.c    ****   MX_DAC_Init();
 451              		.loc 1 98 0
 452 000a FFF7FEFF 		bl	MX_GPIO_Init
 453              	.LVL13:
  99:Src/main.c    ****   MX_USART2_UART_Init();
 454              		.loc 1 99 0
 455 000e FFF7FEFF 		bl	MX_DAC_Init
 456              	.LVL14:
 100:Src/main.c    ****   MX_TIM6_Init();
 457              		.loc 1 100 0
 458 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 459              	.LVL15:
 101:Src/main.c    ****   /* USER CODE BEGIN 2 */
 460              		.loc 1 101 0
 461 0016 FFF7FEFF 		bl	MX_TIM6_Init
 462              	.LVL16:
 108:Src/main.c    ****   HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 463              		.loc 1 108 0
 464 001a 2D4C     		ldr	r4, .L26+24
 465 001c 0021     		movs	r1, #0
 466 001e 2046     		mov	r0, r4
 467 0020 FFF7FEFF 		bl	HAL_DAC_Start
 468              	.LVL17:
 109:Src/main.c    ****   HAL_Delay(1);
 469              		.loc 1 109 0
 470 0024 1021     		movs	r1, #16
 471 0026 2046     		mov	r0, r4
 472 0028 FFF7FEFF 		bl	HAL_DAC_Start
 473              	.LVL18:
 110:Src/main.c    ****   float x = 0.0;
 474              		.loc 1 110 0
 475 002c 0120     		movs	r0, #1
 476 002e FFF7FEFF 		bl	HAL_Delay
 477              	.LVL19:
ARM GAS  /tmp/cctB2UjR.s 			page 16


 111:Src/main.c    ****   float s;
 478              		.loc 1 111 0
 479 0032 0025     		movs	r5, #0
 480 0034 29E0     		b	.L23
 481              	.LVL20:
 482              	.L24:
 116:Src/main.c    ****     //    HAL_DAC_SetValue(&hdac, DAC_CHANNEL_1, DAC_ALIGN_8B_R, (127 * sin(x)) + 127);
 483              		.loc 1 116 0
 484 0036 0020     		movs	r0, #0
 485              	.L22:
 486              	.LVL21:
 116:Src/main.c    ****     //    HAL_DAC_SetValue(&hdac, DAC_CHANNEL_1, DAC_ALIGN_8B_R, (127 * sin(x)) + 127);
 487              		.loc 1 116 0 is_stmt 0 discriminator 4
 488 0038 FFF7FEFF 		bl	__aeabi_f2d
 489              	.LVL22:
 490 003c 1EA3     		adr	r3, .L26
 491 003e D3E90023 		ldrd	r2, [r3]
 492 0042 FFF7FEFF 		bl	__aeabi_dadd
 493              	.LVL23:
 494 0046 FFF7FEFF 		bl	__aeabi_d2f
 495              	.LVL24:
 496 004a 0546     		mov	r5, r0	@ float
 497              	.LVL25:
 118:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, 0);
 498              		.loc 1 118 0 is_stmt 1 discriminator 4
 499 004c 204C     		ldr	r4, .L26+24
 500 004e FF23     		movs	r3, #255
 501 0050 0822     		movs	r2, #8
 502 0052 0021     		movs	r1, #0
 503 0054 2046     		mov	r0, r4
 504              	.LVL26:
 505 0056 FFF7FEFF 		bl	HAL_DAC_SetValue
 506              	.LVL27:
 119:Src/main.c    ****       HAL_Delay(50);
 507              		.loc 1 119 0 discriminator 4
 508 005a 0023     		movs	r3, #0
 509 005c 0822     		movs	r2, #8
 510 005e 1021     		movs	r1, #16
 511 0060 2046     		mov	r0, r4
 512 0062 FFF7FEFF 		bl	HAL_DAC_SetValue
 513              	.LVL28:
 120:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_1, DAC_ALIGN_8B_R, 0);
 514              		.loc 1 120 0 discriminator 4
 515 0066 3220     		movs	r0, #50
 516 0068 FFF7FEFF 		bl	HAL_Delay
 517              	.LVL29:
 121:Src/main.c    ****       HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_8B_R, 255);
 518              		.loc 1 121 0 discriminator 4
 519 006c 0023     		movs	r3, #0
 520 006e 0822     		movs	r2, #8
 521 0070 1946     		mov	r1, r3
 522 0072 2046     		mov	r0, r4
 523 0074 FFF7FEFF 		bl	HAL_DAC_SetValue
 524              	.LVL30:
 122:Src/main.c    ****       HAL_Delay(50);
 525              		.loc 1 122 0 discriminator 4
 526 0078 FF23     		movs	r3, #255
ARM GAS  /tmp/cctB2UjR.s 			page 17


 527 007a 0822     		movs	r2, #8
 528 007c 1021     		movs	r1, #16
 529 007e 2046     		mov	r0, r4
 530 0080 FFF7FEFF 		bl	HAL_DAC_SetValue
 531              	.LVL31:
 123:Src/main.c    ****       //      s = sin(x);
 532              		.loc 1 123 0 discriminator 4
 533 0084 3220     		movs	r0, #50
 534 0086 FFF7FEFF 		bl	HAL_Delay
 535              	.LVL32:
 536              	.L23:
 116:Src/main.c    ****     //    HAL_DAC_SetValue(&hdac, DAC_CHANNEL_1, DAC_ALIGN_8B_R, (127 * sin(x)) + 127);
 537              		.loc 1 116 0
 538 008a 2846     		mov	r0, r5	@ float
 539 008c FFF7FEFF 		bl	__aeabi_f2d
 540              	.LVL33:
 541 0090 0446     		mov	r4, r0
 542 0092 0D46     		mov	r5, r1
 543              	.LVL34:
 544 0094 0AA3     		adr	r3, .L26+8
 545 0096 D3E90023 		ldrd	r2, [r3]
 546 009a FFF7FEFF 		bl	__aeabi_dcmpeq
 547              	.LVL35:
 548 009e 0028     		cmp	r0, #0
 549 00a0 C9D1     		bne	.L24
 116:Src/main.c    ****     //    HAL_DAC_SetValue(&hdac, DAC_CHANNEL_1, DAC_ALIGN_8B_R, (127 * sin(x)) + 127);
 550              		.loc 1 116 0 is_stmt 0 discriminator 2
 551 00a2 09A3     		adr	r3, .L26+16
 552 00a4 D3E90023 		ldrd	r2, [r3]
 553 00a8 2046     		mov	r0, r4
 554 00aa 2946     		mov	r1, r5
 555 00ac FFF7FEFF 		bl	__aeabi_dadd
 556              	.LVL36:
 557 00b0 FFF7FEFF 		bl	__aeabi_d2f
 558              	.LVL37:
 559 00b4 C0E7     		b	.L22
 560              	.L27:
 561 00b6 00BF     		.align	3
 562              	.L26:
 563 00b8 9A999999 		.word	2576980378
 564 00bc 9999B93F 		.word	1069128089
 565 00c0 7A008BFC 		.word	4236968058
 566 00c4 FA211940 		.word	1075388922
 567 00c8 7A008BFC 		.word	4236968058
 568 00cc FA210940 		.word	1074340346
 569 00d0 00000000 		.word	hdac
 570              		.cfi_endproc
 571              	.LFE130:
 573              		.section	.text.Error_Handler,"ax",%progbits
 574              		.align	1
 575              		.global	Error_Handler
 576              		.syntax unified
 577              		.thumb
 578              		.thumb_func
 579              		.fpu fpv4-sp-d16
 581              	Error_Handler:
 582              	.LFB136:
ARM GAS  /tmp/cctB2UjR.s 			page 18


 324:Src/main.c    **** 
 325:Src/main.c    **** /* USER CODE BEGIN 4 */
 326:Src/main.c    **** 
 327:Src/main.c    **** /* USER CODE END 4 */
 328:Src/main.c    **** 
 329:Src/main.c    **** /**
 330:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 331:Src/main.c    ****   * @retval None
 332:Src/main.c    ****   */
 333:Src/main.c    **** void Error_Handler(void)
 334:Src/main.c    **** {
 583              		.loc 1 334 0 is_stmt 1
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587              		@ link register save eliminated.
 335:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 336:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 337:Src/main.c    **** 
 338:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 339:Src/main.c    **** }
 588              		.loc 1 339 0
 589 0000 7047     		bx	lr
 590              		.cfi_endproc
 591              	.LFE136:
 593              		.comm	huart2,64,4
 594              		.comm	htim6,64,4
 595              		.comm	hdac,20,4
 596              		.text
 597              	.Letext0:
 598              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 599              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 600              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 601              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 602              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 603              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 604              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 605              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 606              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 607              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 608              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dac.h"
 609              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 610              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 611              		.file 15 "/usr/include/newlib/sys/lock.h"
 612              		.file 16 "/usr/include/newlib/sys/_types.h"
 613              		.file 17 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 614              		.file 18 "/usr/include/newlib/sys/reent.h"
 615              		.file 19 "/usr/include/newlib/math.h"
 616              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 617              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h"
 618              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 619              		.file 23 "<built-in>"
ARM GAS  /tmp/cctB2UjR.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cctB2UjR.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cctB2UjR.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cctB2UjR.s:108    .text.MX_GPIO_Init:0000000000000078 $d
     /tmp/cctB2UjR.s:115    .text.MX_DAC_Init:0000000000000000 $t
     /tmp/cctB2UjR.s:121    .text.MX_DAC_Init:0000000000000000 MX_DAC_Init
     /tmp/cctB2UjR.s:173    .text.MX_DAC_Init:0000000000000034 $d
                            *COM*:0000000000000014 hdac
     /tmp/cctB2UjR.s:179    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cctB2UjR.s:185    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cctB2UjR.s:225    .text.MX_USART2_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart2
     /tmp/cctB2UjR.s:231    .text.MX_TIM6_Init:0000000000000000 $t
     /tmp/cctB2UjR.s:237    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
     /tmp/cctB2UjR.s:291    .text.MX_TIM6_Init:0000000000000030 $d
                            *COM*:0000000000000040 htim6
     /tmp/cctB2UjR.s:297    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cctB2UjR.s:304    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cctB2UjR.s:415    .text.SystemClock_Config:0000000000000090 $d
     /tmp/cctB2UjR.s:425    .text.main:0000000000000000 $t
     /tmp/cctB2UjR.s:432    .text.main:0000000000000000 main
     /tmp/cctB2UjR.s:563    .text.main:00000000000000b8 $d
     /tmp/cctB2UjR.s:574    .text.Error_Handler:0000000000000000 $t
     /tmp/cctB2UjR.s:581    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_DAC_Init
HAL_DAC_ConfigChannel
HAL_UART_Init
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
__aeabi_f2d
__aeabi_dcmpeq
__aeabi_dadd
__aeabi_d2f
HAL_Init
HAL_DAC_Start
HAL_Delay
HAL_DAC_SetValue
